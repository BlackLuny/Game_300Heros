// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "heroskin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* heroskin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  heroskin_reflection_ = NULL;
const ::google::protobuf::Descriptor* heroskin_c_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  heroskin_c_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_heroskin_2eproto() {
  protobuf_AddDesc_heroskin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "heroskin.proto");
  GOOGLE_CHECK(file != NULL);
  heroskin_descriptor_ = file->message_type(0);
  static const int heroskin_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, hero_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, skin_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, head_img_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, box_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, str3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, str4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, str5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, str6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, str7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, head_img_wh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, box_wh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, card_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, card_wh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, unk_),
  };
  heroskin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      heroskin_descriptor_,
      heroskin::default_instance_,
      heroskin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(heroskin));
  heroskin_c_descriptor_ = file->message_type(1);
  static const int heroskin_c_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin_c, skins_),
  };
  heroskin_c_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      heroskin_c_descriptor_,
      heroskin_c::default_instance_,
      heroskin_c_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin_c, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(heroskin_c, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(heroskin_c));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_heroskin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    heroskin_descriptor_, &heroskin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    heroskin_c_descriptor_, &heroskin_c::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_heroskin_2eproto() {
  delete heroskin::default_instance_;
  delete heroskin_reflection_;
  delete heroskin_c::default_instance_;
  delete heroskin_c_reflection_;
}

void protobuf_AddDesc_heroskin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016heroskin.proto\"\224\002\n\010heroskin\022\022\n\nhero_in"
    "dex\030\001 \002(\005\022\022\n\nskin_index\030\002 \001(\005\022\020\n\010resourc"
    "e\030\003 \001(\t\022\024\n\014head_img_pos\030\010 \001(\t\022\017\n\007box_pos"
    "\030\t \001(\t\022\014\n\004str3\030\n \001(\t\022\014\n\004str4\030\013 \001(\t\022\014\n\004ty"
    "pe\030\014 \001(\005\022\014\n\004str5\030\r \001(\t\022\014\n\004str6\030\016 \001(\t\022\014\n\004"
    "str7\030\017 \001(\t\022\023\n\013head_img_wh\030\020 \001(\t\022\016\n\006box_w"
    "h\030\021 \001(\t\022\020\n\010card_pos\030\022 \001(\t\022\017\n\007card_wh\030\023 \001"
    "(\t\022\013\n\003unk\030\024 \001(\005\"&\n\nheroskin_c\022\030\n\005skins\030\001"
    " \003(\0132\t.heroskin", 335);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "heroskin.proto", &protobuf_RegisterTypes);
  heroskin::default_instance_ = new heroskin();
  heroskin_c::default_instance_ = new heroskin_c();
  heroskin::default_instance_->InitAsDefaultInstance();
  heroskin_c::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_heroskin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_heroskin_2eproto {
  StaticDescriptorInitializer_heroskin_2eproto() {
    protobuf_AddDesc_heroskin_2eproto();
  }
} static_descriptor_initializer_heroskin_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int heroskin::kHeroIndexFieldNumber;
const int heroskin::kSkinIndexFieldNumber;
const int heroskin::kResourceFieldNumber;
const int heroskin::kHeadImgPosFieldNumber;
const int heroskin::kBoxPosFieldNumber;
const int heroskin::kStr3FieldNumber;
const int heroskin::kStr4FieldNumber;
const int heroskin::kTypeFieldNumber;
const int heroskin::kStr5FieldNumber;
const int heroskin::kStr6FieldNumber;
const int heroskin::kStr7FieldNumber;
const int heroskin::kHeadImgWhFieldNumber;
const int heroskin::kBoxWhFieldNumber;
const int heroskin::kCardPosFieldNumber;
const int heroskin::kCardWhFieldNumber;
const int heroskin::kUnkFieldNumber;
#endif  // !_MSC_VER

heroskin::heroskin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void heroskin::InitAsDefaultInstance() {
}

heroskin::heroskin(const heroskin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void heroskin::SharedCtor() {
  _cached_size_ = 0;
  hero_index_ = 0;
  skin_index_ = 0;
  resource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  head_img_pos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  box_pos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  str3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  str4_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  str5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  str6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  str7_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  head_img_wh_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  box_wh_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  card_pos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  card_wh_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unk_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

heroskin::~heroskin() {
  SharedDtor();
}

void heroskin::SharedDtor() {
  if (resource_ != &::google::protobuf::internal::kEmptyString) {
    delete resource_;
  }
  if (head_img_pos_ != &::google::protobuf::internal::kEmptyString) {
    delete head_img_pos_;
  }
  if (box_pos_ != &::google::protobuf::internal::kEmptyString) {
    delete box_pos_;
  }
  if (str3_ != &::google::protobuf::internal::kEmptyString) {
    delete str3_;
  }
  if (str4_ != &::google::protobuf::internal::kEmptyString) {
    delete str4_;
  }
  if (str5_ != &::google::protobuf::internal::kEmptyString) {
    delete str5_;
  }
  if (str6_ != &::google::protobuf::internal::kEmptyString) {
    delete str6_;
  }
  if (str7_ != &::google::protobuf::internal::kEmptyString) {
    delete str7_;
  }
  if (head_img_wh_ != &::google::protobuf::internal::kEmptyString) {
    delete head_img_wh_;
  }
  if (box_wh_ != &::google::protobuf::internal::kEmptyString) {
    delete box_wh_;
  }
  if (card_pos_ != &::google::protobuf::internal::kEmptyString) {
    delete card_pos_;
  }
  if (card_wh_ != &::google::protobuf::internal::kEmptyString) {
    delete card_wh_;
  }
  if (this != default_instance_) {
  }
}

void heroskin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* heroskin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return heroskin_descriptor_;
}

const heroskin& heroskin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_heroskin_2eproto();  return *default_instance_;
}

heroskin* heroskin::default_instance_ = NULL;

heroskin* heroskin::New() const {
  return new heroskin;
}

void heroskin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hero_index_ = 0;
    skin_index_ = 0;
    if (has_resource()) {
      if (resource_ != &::google::protobuf::internal::kEmptyString) {
        resource_->clear();
      }
    }
    if (has_head_img_pos()) {
      if (head_img_pos_ != &::google::protobuf::internal::kEmptyString) {
        head_img_pos_->clear();
      }
    }
    if (has_box_pos()) {
      if (box_pos_ != &::google::protobuf::internal::kEmptyString) {
        box_pos_->clear();
      }
    }
    if (has_str3()) {
      if (str3_ != &::google::protobuf::internal::kEmptyString) {
        str3_->clear();
      }
    }
    if (has_str4()) {
      if (str4_ != &::google::protobuf::internal::kEmptyString) {
        str4_->clear();
      }
    }
    type_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_str5()) {
      if (str5_ != &::google::protobuf::internal::kEmptyString) {
        str5_->clear();
      }
    }
    if (has_str6()) {
      if (str6_ != &::google::protobuf::internal::kEmptyString) {
        str6_->clear();
      }
    }
    if (has_str7()) {
      if (str7_ != &::google::protobuf::internal::kEmptyString) {
        str7_->clear();
      }
    }
    if (has_head_img_wh()) {
      if (head_img_wh_ != &::google::protobuf::internal::kEmptyString) {
        head_img_wh_->clear();
      }
    }
    if (has_box_wh()) {
      if (box_wh_ != &::google::protobuf::internal::kEmptyString) {
        box_wh_->clear();
      }
    }
    if (has_card_pos()) {
      if (card_pos_ != &::google::protobuf::internal::kEmptyString) {
        card_pos_->clear();
      }
    }
    if (has_card_wh()) {
      if (card_wh_ != &::google::protobuf::internal::kEmptyString) {
        card_wh_->clear();
      }
    }
    unk_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool heroskin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 hero_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hero_index_)));
          set_has_hero_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skin_index;
        break;
      }
      
      // optional int32 skin_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skin_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skin_index_)));
          set_has_skin_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_resource;
        break;
      }
      
      // optional string resource = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->resource().data(), this->resource().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_head_img_pos;
        break;
      }
      
      // optional string head_img_pos = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_head_img_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head_img_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->head_img_pos().data(), this->head_img_pos().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_box_pos;
        break;
      }
      
      // optional string box_pos = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_box_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_box_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->box_pos().data(), this->box_pos().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_str3;
        break;
      }
      
      // optional string str3 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_str3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str3().data(), this->str3().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_str4;
        break;
      }
      
      // optional string str4 = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_str4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str4().data(), this->str4().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_type;
        break;
      }
      
      // optional int32 type = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_str5;
        break;
      }
      
      // optional string str5 = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_str5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str5().data(), this->str5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_str6;
        break;
      }
      
      // optional string str6 = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_str6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str6().data(), this->str6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_str7;
        break;
      }
      
      // optional string str7 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_str7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str7().data(), this->str7().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_head_img_wh;
        break;
      }
      
      // optional string head_img_wh = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_head_img_wh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head_img_wh()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->head_img_wh().data(), this->head_img_wh().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_box_wh;
        break;
      }
      
      // optional string box_wh = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_box_wh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_box_wh()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->box_wh().data(), this->box_wh().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_card_pos;
        break;
      }
      
      // optional string card_pos = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_card_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->card_pos().data(), this->card_pos().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_card_wh;
        break;
      }
      
      // optional string card_wh = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_card_wh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_wh()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->card_wh().data(), this->card_wh().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_unk;
        break;
      }
      
      // optional int32 unk = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_)));
          set_has_unk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void heroskin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 hero_index = 1;
  if (has_hero_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hero_index(), output);
  }
  
  // optional int32 skin_index = 2;
  if (has_skin_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skin_index(), output);
  }
  
  // optional string resource = 3;
  if (has_resource()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resource().data(), this->resource().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->resource(), output);
  }
  
  // optional string head_img_pos = 8;
  if (has_head_img_pos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->head_img_pos().data(), this->head_img_pos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->head_img_pos(), output);
  }
  
  // optional string box_pos = 9;
  if (has_box_pos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->box_pos().data(), this->box_pos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->box_pos(), output);
  }
  
  // optional string str3 = 10;
  if (has_str3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str3().data(), this->str3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->str3(), output);
  }
  
  // optional string str4 = 11;
  if (has_str4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str4().data(), this->str4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->str4(), output);
  }
  
  // optional int32 type = 12;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->type(), output);
  }
  
  // optional string str5 = 13;
  if (has_str5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str5().data(), this->str5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->str5(), output);
  }
  
  // optional string str6 = 14;
  if (has_str6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str6().data(), this->str6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->str6(), output);
  }
  
  // optional string str7 = 15;
  if (has_str7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str7().data(), this->str7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->str7(), output);
  }
  
  // optional string head_img_wh = 16;
  if (has_head_img_wh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->head_img_wh().data(), this->head_img_wh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->head_img_wh(), output);
  }
  
  // optional string box_wh = 17;
  if (has_box_wh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->box_wh().data(), this->box_wh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->box_wh(), output);
  }
  
  // optional string card_pos = 18;
  if (has_card_pos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_pos().data(), this->card_pos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->card_pos(), output);
  }
  
  // optional string card_wh = 19;
  if (has_card_wh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_wh().data(), this->card_wh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->card_wh(), output);
  }
  
  // optional int32 unk = 20;
  if (has_unk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->unk(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* heroskin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 hero_index = 1;
  if (has_hero_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hero_index(), target);
  }
  
  // optional int32 skin_index = 2;
  if (has_skin_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skin_index(), target);
  }
  
  // optional string resource = 3;
  if (has_resource()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resource().data(), this->resource().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->resource(), target);
  }
  
  // optional string head_img_pos = 8;
  if (has_head_img_pos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->head_img_pos().data(), this->head_img_pos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->head_img_pos(), target);
  }
  
  // optional string box_pos = 9;
  if (has_box_pos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->box_pos().data(), this->box_pos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->box_pos(), target);
  }
  
  // optional string str3 = 10;
  if (has_str3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str3().data(), this->str3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->str3(), target);
  }
  
  // optional string str4 = 11;
  if (has_str4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str4().data(), this->str4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->str4(), target);
  }
  
  // optional int32 type = 12;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->type(), target);
  }
  
  // optional string str5 = 13;
  if (has_str5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str5().data(), this->str5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->str5(), target);
  }
  
  // optional string str6 = 14;
  if (has_str6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str6().data(), this->str6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->str6(), target);
  }
  
  // optional string str7 = 15;
  if (has_str7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str7().data(), this->str7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->str7(), target);
  }
  
  // optional string head_img_wh = 16;
  if (has_head_img_wh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->head_img_wh().data(), this->head_img_wh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->head_img_wh(), target);
  }
  
  // optional string box_wh = 17;
  if (has_box_wh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->box_wh().data(), this->box_wh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->box_wh(), target);
  }
  
  // optional string card_pos = 18;
  if (has_card_pos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_pos().data(), this->card_pos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->card_pos(), target);
  }
  
  // optional string card_wh = 19;
  if (has_card_wh()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_wh().data(), this->card_wh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->card_wh(), target);
  }
  
  // optional int32 unk = 20;
  if (has_unk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->unk(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int heroskin::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 hero_index = 1;
    if (has_hero_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hero_index());
    }
    
    // optional int32 skin_index = 2;
    if (has_skin_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skin_index());
    }
    
    // optional string resource = 3;
    if (has_resource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resource());
    }
    
    // optional string head_img_pos = 8;
    if (has_head_img_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->head_img_pos());
    }
    
    // optional string box_pos = 9;
    if (has_box_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->box_pos());
    }
    
    // optional string str3 = 10;
    if (has_str3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str3());
    }
    
    // optional string str4 = 11;
    if (has_str4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str4());
    }
    
    // optional int32 type = 12;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string str5 = 13;
    if (has_str5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str5());
    }
    
    // optional string str6 = 14;
    if (has_str6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str6());
    }
    
    // optional string str7 = 15;
    if (has_str7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str7());
    }
    
    // optional string head_img_wh = 16;
    if (has_head_img_wh()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->head_img_wh());
    }
    
    // optional string box_wh = 17;
    if (has_box_wh()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->box_wh());
    }
    
    // optional string card_pos = 18;
    if (has_card_pos()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->card_pos());
    }
    
    // optional string card_wh = 19;
    if (has_card_wh()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->card_wh());
    }
    
    // optional int32 unk = 20;
    if (has_unk()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void heroskin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const heroskin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const heroskin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void heroskin::MergeFrom(const heroskin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hero_index()) {
      set_hero_index(from.hero_index());
    }
    if (from.has_skin_index()) {
      set_skin_index(from.skin_index());
    }
    if (from.has_resource()) {
      set_resource(from.resource());
    }
    if (from.has_head_img_pos()) {
      set_head_img_pos(from.head_img_pos());
    }
    if (from.has_box_pos()) {
      set_box_pos(from.box_pos());
    }
    if (from.has_str3()) {
      set_str3(from.str3());
    }
    if (from.has_str4()) {
      set_str4(from.str4());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_str5()) {
      set_str5(from.str5());
    }
    if (from.has_str6()) {
      set_str6(from.str6());
    }
    if (from.has_str7()) {
      set_str7(from.str7());
    }
    if (from.has_head_img_wh()) {
      set_head_img_wh(from.head_img_wh());
    }
    if (from.has_box_wh()) {
      set_box_wh(from.box_wh());
    }
    if (from.has_card_pos()) {
      set_card_pos(from.card_pos());
    }
    if (from.has_card_wh()) {
      set_card_wh(from.card_wh());
    }
    if (from.has_unk()) {
      set_unk(from.unk());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void heroskin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void heroskin::CopyFrom(const heroskin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool heroskin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void heroskin::Swap(heroskin* other) {
  if (other != this) {
    std::swap(hero_index_, other->hero_index_);
    std::swap(skin_index_, other->skin_index_);
    std::swap(resource_, other->resource_);
    std::swap(head_img_pos_, other->head_img_pos_);
    std::swap(box_pos_, other->box_pos_);
    std::swap(str3_, other->str3_);
    std::swap(str4_, other->str4_);
    std::swap(type_, other->type_);
    std::swap(str5_, other->str5_);
    std::swap(str6_, other->str6_);
    std::swap(str7_, other->str7_);
    std::swap(head_img_wh_, other->head_img_wh_);
    std::swap(box_wh_, other->box_wh_);
    std::swap(card_pos_, other->card_pos_);
    std::swap(card_wh_, other->card_wh_);
    std::swap(unk_, other->unk_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata heroskin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = heroskin_descriptor_;
  metadata.reflection = heroskin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int heroskin_c::kSkinsFieldNumber;
#endif  // !_MSC_VER

heroskin_c::heroskin_c()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void heroskin_c::InitAsDefaultInstance() {
}

heroskin_c::heroskin_c(const heroskin_c& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void heroskin_c::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

heroskin_c::~heroskin_c() {
  SharedDtor();
}

void heroskin_c::SharedDtor() {
  if (this != default_instance_) {
  }
}

void heroskin_c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* heroskin_c::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return heroskin_c_descriptor_;
}

const heroskin_c& heroskin_c::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_heroskin_2eproto();  return *default_instance_;
}

heroskin_c* heroskin_c::default_instance_ = NULL;

heroskin_c* heroskin_c::New() const {
  return new heroskin_c;
}

void heroskin_c::Clear() {
  skins_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool heroskin_c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .heroskin skins = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skins:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skins()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skins;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void heroskin_c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .heroskin skins = 1;
  for (int i = 0; i < this->skins_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skins(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* heroskin_c::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .heroskin skins = 1;
  for (int i = 0; i < this->skins_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skins(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int heroskin_c::ByteSize() const {
  int total_size = 0;
  
  // repeated .heroskin skins = 1;
  total_size += 1 * this->skins_size();
  for (int i = 0; i < this->skins_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skins(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void heroskin_c::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const heroskin_c* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const heroskin_c*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void heroskin_c::MergeFrom(const heroskin_c& from) {
  GOOGLE_CHECK_NE(&from, this);
  skins_.MergeFrom(from.skins_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void heroskin_c::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void heroskin_c::CopyFrom(const heroskin_c& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool heroskin_c::IsInitialized() const {
  
  for (int i = 0; i < skins_size(); i++) {
    if (!this->skins(i).IsInitialized()) return false;
  }
  return true;
}

void heroskin_c::Swap(heroskin_c* other) {
  if (other != this) {
    skins_.Swap(&other->skins_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata heroskin_c::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = heroskin_c_descriptor_;
  metadata.reflection = heroskin_c_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
