// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "item_item_c.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* item_item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  item_item_reflection_ = NULL;
const ::google::protobuf::Descriptor* item_item_c_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  item_item_c_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_item_5fitem_5fc_2eproto() {
  protobuf_AddDesc_item_5fitem_5fc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "item_item_c.proto");
  GOOGLE_CHECK(file != NULL);
  item_item_descriptor_ = file->message_type(0);
  static const int item_item_offsets_[43] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_6x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_i_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, item_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_15_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_16_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_17_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_18_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_19_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_20_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_21_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_22_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_25_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, ico_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_31_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_33_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_34_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_35_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_36_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_37_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, scene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_39_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_40_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_41_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, ff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_43_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, unk_44_),
  };
  item_item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      item_item_descriptor_,
      item_item::default_instance_,
      item_item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(item_item));
  item_item_c_descriptor_ = file->message_type(1);
  static const int item_item_c_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item_c, items_),
  };
  item_item_c_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      item_item_c_descriptor_,
      item_item_c::default_instance_,
      item_item_c_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item_c, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(item_item_c, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(item_item_c));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_item_5fitem_5fc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    item_item_descriptor_, &item_item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    item_item_c_descriptor_, &item_item_c::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_item_5fitem_5fc_2eproto() {
  delete item_item::default_instance_;
  delete item_item_reflection_;
  delete item_item_c::default_instance_;
  delete item_item_c_reflection_;
}

void protobuf_AddDesc_item_5fitem_5fc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021item_item_c.proto\"\261\005\n\titem_item\022\017\n\007ite"
    "m_id\030\001 \002(\005\022\r\n\005unk_1\030\002 \002(\010\022\r\n\005unk_2\030\003 \002(\010"
    "\022\r\n\005unk_3\030\004 \002(\010\022\r\n\005unk_4\030\005 \002(\010\022\r\n\005unk_5\030"
    "\006 \002(\010\022\r\n\005unk_6\030\007 \002(\010\022\016\n\006unk_6x\030\010 \001(\010\022\017\n\007"
    "unk_i_6\030\t \001(\010\022\021\n\titem_type\030\n \002(\t\022\016\n\006unk_"
    "11\030\013 \002(\010\022\016\n\006unk_12\030\014 \002(\010\022\016\n\006unk_13\030\r \002(\010"
    "\022\016\n\006unk_14\030\016 \002(\010\022\016\n\006unk_15\030\017 \002(\010\022\016\n\006unk_"
    "16\030\020 \002(\010\022\016\n\006unk_17\030\021 \002(\010\022\016\n\006unk_18\030\022 \002(\010"
    "\022\016\n\006unk_19\030\023 \002(\010\022\016\n\006unk_20\030\024 \002(\010\022\016\n\006unk_"
    "21\030\025 \002(\010\022\016\n\006unk_22\030\026 \002(\010\022\014\n\004name\030\027 \001(\014\022\014"
    "\n\004desc\030\030 \001(\014\022\016\n\006unk_25\030\031 \002(\010\022\013\n\003ico\030\032 \002("
    "\t\022\016\n\006unk_id\030\034 \002(\005\022\021\n\tshop_type\030\035 \001(\014\022\016\n\006"
    "unk_30\030\036 \001(\005\022\016\n\006unk_31\030\037 \001(\005\022\016\n\006unk_32\030 "
    " \001(\005\022\016\n\006unk_33\030! \001(\005\022\016\n\006unk_34\030\" \001(\005\022\016\n\006"
    "unk_35\030# \001(\005\022\016\n\006unk_36\030$ \001(\005\022\016\n\006unk_37\030%"
    " \001(\005\022\r\n\005scene\030& \001(\t\022\016\n\006unk_39\030\' \001(\005\022\016\n\006u"
    "nk_40\030( \001(\t\022\016\n\006unk_41\030) \001(\005\022\n\n\002ff\030* \001(\t\022"
    "\016\n\006unk_43\030+ \001(\005\022\016\n\006unk_44\030, \001(\005\"(\n\013item_"
    "item_c\022\031\n\005items\030\001 \003(\0132\n.item_item", 753);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "item_item_c.proto", &protobuf_RegisterTypes);
  item_item::default_instance_ = new item_item();
  item_item_c::default_instance_ = new item_item_c();
  item_item::default_instance_->InitAsDefaultInstance();
  item_item_c::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_item_5fitem_5fc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_item_5fitem_5fc_2eproto {
  StaticDescriptorInitializer_item_5fitem_5fc_2eproto() {
    protobuf_AddDesc_item_5fitem_5fc_2eproto();
  }
} static_descriptor_initializer_item_5fitem_5fc_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int item_item::kItemIdFieldNumber;
const int item_item::kUnk1FieldNumber;
const int item_item::kUnk2FieldNumber;
const int item_item::kUnk3FieldNumber;
const int item_item::kUnk4FieldNumber;
const int item_item::kUnk5FieldNumber;
const int item_item::kUnk6FieldNumber;
const int item_item::kUnk6XFieldNumber;
const int item_item::kUnkI6FieldNumber;
const int item_item::kItemTypeFieldNumber;
const int item_item::kUnk11FieldNumber;
const int item_item::kUnk12FieldNumber;
const int item_item::kUnk13FieldNumber;
const int item_item::kUnk14FieldNumber;
const int item_item::kUnk15FieldNumber;
const int item_item::kUnk16FieldNumber;
const int item_item::kUnk17FieldNumber;
const int item_item::kUnk18FieldNumber;
const int item_item::kUnk19FieldNumber;
const int item_item::kUnk20FieldNumber;
const int item_item::kUnk21FieldNumber;
const int item_item::kUnk22FieldNumber;
const int item_item::kNameFieldNumber;
const int item_item::kDescFieldNumber;
const int item_item::kUnk25FieldNumber;
const int item_item::kIcoFieldNumber;
const int item_item::kUnkIdFieldNumber;
const int item_item::kShopTypeFieldNumber;
const int item_item::kUnk30FieldNumber;
const int item_item::kUnk31FieldNumber;
const int item_item::kUnk32FieldNumber;
const int item_item::kUnk33FieldNumber;
const int item_item::kUnk34FieldNumber;
const int item_item::kUnk35FieldNumber;
const int item_item::kUnk36FieldNumber;
const int item_item::kUnk37FieldNumber;
const int item_item::kSceneFieldNumber;
const int item_item::kUnk39FieldNumber;
const int item_item::kUnk40FieldNumber;
const int item_item::kUnk41FieldNumber;
const int item_item::kFfFieldNumber;
const int item_item::kUnk43FieldNumber;
const int item_item::kUnk44FieldNumber;
#endif  // !_MSC_VER

item_item::item_item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void item_item::InitAsDefaultInstance() {
}

item_item::item_item(const item_item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void item_item::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  unk_1_ = false;
  unk_2_ = false;
  unk_3_ = false;
  unk_4_ = false;
  unk_5_ = false;
  unk_6_ = false;
  unk_6x_ = false;
  unk_i_6_ = false;
  item_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unk_11_ = false;
  unk_12_ = false;
  unk_13_ = false;
  unk_14_ = false;
  unk_15_ = false;
  unk_16_ = false;
  unk_17_ = false;
  unk_18_ = false;
  unk_19_ = false;
  unk_20_ = false;
  unk_21_ = false;
  unk_22_ = false;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unk_25_ = false;
  ico_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unk_id_ = 0;
  shop_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unk_30_ = 0;
  unk_31_ = 0;
  unk_32_ = 0;
  unk_33_ = 0;
  unk_34_ = 0;
  unk_35_ = 0;
  unk_36_ = 0;
  unk_37_ = 0;
  scene_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unk_39_ = 0;
  unk_40_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unk_41_ = 0;
  ff_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unk_43_ = 0;
  unk_44_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

item_item::~item_item() {
  SharedDtor();
}

void item_item::SharedDtor() {
  if (item_type_ != &::google::protobuf::internal::kEmptyString) {
    delete item_type_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (ico_ != &::google::protobuf::internal::kEmptyString) {
    delete ico_;
  }
  if (shop_type_ != &::google::protobuf::internal::kEmptyString) {
    delete shop_type_;
  }
  if (scene_ != &::google::protobuf::internal::kEmptyString) {
    delete scene_;
  }
  if (unk_40_ != &::google::protobuf::internal::kEmptyString) {
    delete unk_40_;
  }
  if (ff_ != &::google::protobuf::internal::kEmptyString) {
    delete ff_;
  }
  if (this != default_instance_) {
  }
}

void item_item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* item_item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return item_item_descriptor_;
}

const item_item& item_item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fitem_5fc_2eproto();  return *default_instance_;
}

item_item* item_item::default_instance_ = NULL;

item_item* item_item::New() const {
  return new item_item;
}

void item_item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    unk_1_ = false;
    unk_2_ = false;
    unk_3_ = false;
    unk_4_ = false;
    unk_5_ = false;
    unk_6_ = false;
    unk_6x_ = false;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    unk_i_6_ = false;
    if (has_item_type()) {
      if (item_type_ != &::google::protobuf::internal::kEmptyString) {
        item_type_->clear();
      }
    }
    unk_11_ = false;
    unk_12_ = false;
    unk_13_ = false;
    unk_14_ = false;
    unk_15_ = false;
    unk_16_ = false;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    unk_17_ = false;
    unk_18_ = false;
    unk_19_ = false;
    unk_20_ = false;
    unk_21_ = false;
    unk_22_ = false;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    unk_25_ = false;
    if (has_ico()) {
      if (ico_ != &::google::protobuf::internal::kEmptyString) {
        ico_->clear();
      }
    }
    unk_id_ = 0;
    if (has_shop_type()) {
      if (shop_type_ != &::google::protobuf::internal::kEmptyString) {
        shop_type_->clear();
      }
    }
    unk_30_ = 0;
    unk_31_ = 0;
    unk_32_ = 0;
    unk_33_ = 0;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    unk_34_ = 0;
    unk_35_ = 0;
    unk_36_ = 0;
    unk_37_ = 0;
    if (has_scene()) {
      if (scene_ != &::google::protobuf::internal::kEmptyString) {
        scene_->clear();
      }
    }
    unk_39_ = 0;
    if (has_unk_40()) {
      if (unk_40_ != &::google::protobuf::internal::kEmptyString) {
        unk_40_->clear();
      }
    }
    unk_41_ = 0;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (has_ff()) {
      if (ff_ != &::google::protobuf::internal::kEmptyString) {
        ff_->clear();
      }
    }
    unk_43_ = 0;
    unk_44_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool item_item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_unk_1;
        break;
      }
      
      // required bool unk_1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_1_)));
          set_has_unk_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_unk_2;
        break;
      }
      
      // required bool unk_2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_2_)));
          set_has_unk_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_unk_3;
        break;
      }
      
      // required bool unk_3 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_3_)));
          set_has_unk_3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_unk_4;
        break;
      }
      
      // required bool unk_4 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_4_)));
          set_has_unk_4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_unk_5;
        break;
      }
      
      // required bool unk_5 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_5_)));
          set_has_unk_5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_unk_6;
        break;
      }
      
      // required bool unk_6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_6_)));
          set_has_unk_6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_unk_6x;
        break;
      }
      
      // optional bool unk_6x = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_6x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_6x_)));
          set_has_unk_6x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_unk_i_6;
        break;
      }
      
      // optional bool unk_i_6 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_i_6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_i_6_)));
          set_has_unk_i_6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_item_type;
        break;
      }
      
      // required string item_type = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->item_type().data(), this->item_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_unk_11;
        break;
      }
      
      // required bool unk_11 = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_11_)));
          set_has_unk_11();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_unk_12;
        break;
      }
      
      // required bool unk_12 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_12_)));
          set_has_unk_12();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_unk_13;
        break;
      }
      
      // required bool unk_13 = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_13:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_13_)));
          set_has_unk_13();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_unk_14;
        break;
      }
      
      // required bool unk_14 = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_14_)));
          set_has_unk_14();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_unk_15;
        break;
      }
      
      // required bool unk_15 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_15:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_15_)));
          set_has_unk_15();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_unk_16;
        break;
      }
      
      // required bool unk_16 = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_16:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_16_)));
          set_has_unk_16();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_unk_17;
        break;
      }
      
      // required bool unk_17 = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_17:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_17_)));
          set_has_unk_17();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_unk_18;
        break;
      }
      
      // required bool unk_18 = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_18:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_18_)));
          set_has_unk_18();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_unk_19;
        break;
      }
      
      // required bool unk_19 = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_19:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_19_)));
          set_has_unk_19();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_unk_20;
        break;
      }
      
      // required bool unk_20 = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_20:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_20_)));
          set_has_unk_20();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_unk_21;
        break;
      }
      
      // required bool unk_21 = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_21:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_21_)));
          set_has_unk_21();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_unk_22;
        break;
      }
      
      // required bool unk_22 = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_22:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_22_)));
          set_has_unk_22();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_name;
        break;
      }
      
      // optional bytes name = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_desc;
        break;
      }
      
      // optional bytes desc = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_unk_25;
        break;
      }
      
      // required bool unk_25 = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_25:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unk_25_)));
          set_has_unk_25();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_ico;
        break;
      }
      
      // required string ico = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ico:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ico()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ico().data(), this->ico().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_unk_id;
        break;
      }
      
      // required int32 unk_id = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_id_)));
          set_has_unk_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_shop_type;
        break;
      }
      
      // optional bytes shop_type = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shop_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_shop_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_unk_30;
        break;
      }
      
      // optional int32 unk_30 = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_30:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_30_)));
          set_has_unk_30();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_unk_31;
        break;
      }
      
      // optional int32 unk_31 = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_31:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_31_)));
          set_has_unk_31();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_unk_32;
        break;
      }
      
      // optional int32 unk_32 = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_32_)));
          set_has_unk_32();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_unk_33;
        break;
      }
      
      // optional int32 unk_33 = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_33:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_33_)));
          set_has_unk_33();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_unk_34;
        break;
      }
      
      // optional int32 unk_34 = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_34:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_34_)));
          set_has_unk_34();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_unk_35;
        break;
      }
      
      // optional int32 unk_35 = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_35:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_35_)));
          set_has_unk_35();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_unk_36;
        break;
      }
      
      // optional int32 unk_36 = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_36:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_36_)));
          set_has_unk_36();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(296)) goto parse_unk_37;
        break;
      }
      
      // optional int32 unk_37 = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_37:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_37_)));
          set_has_unk_37();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(306)) goto parse_scene;
        break;
      }
      
      // optional string scene = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_scene:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scene()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->scene().data(), this->scene().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_unk_39;
        break;
      }
      
      // optional int32 unk_39 = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_39:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_39_)));
          set_has_unk_39();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(322)) goto parse_unk_40;
        break;
      }
      
      // optional string unk_40 = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_unk_40:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unk_40()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->unk_40().data(), this->unk_40().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_unk_41;
        break;
      }
      
      // optional int32 unk_41 = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_41:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_41_)));
          set_has_unk_41();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(338)) goto parse_ff;
        break;
      }
      
      // optional string ff = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ff()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ff().data(), this->ff().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(344)) goto parse_unk_43;
        break;
      }
      
      // optional int32 unk_43 = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_43:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_43_)));
          set_has_unk_43();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(352)) goto parse_unk_44;
        break;
      }
      
      // optional int32 unk_44 = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unk_44:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unk_44_)));
          set_has_unk_44();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void item_item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // required bool unk_1 = 2;
  if (has_unk_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->unk_1(), output);
  }
  
  // required bool unk_2 = 3;
  if (has_unk_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->unk_2(), output);
  }
  
  // required bool unk_3 = 4;
  if (has_unk_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->unk_3(), output);
  }
  
  // required bool unk_4 = 5;
  if (has_unk_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->unk_4(), output);
  }
  
  // required bool unk_5 = 6;
  if (has_unk_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->unk_5(), output);
  }
  
  // required bool unk_6 = 7;
  if (has_unk_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->unk_6(), output);
  }
  
  // optional bool unk_6x = 8;
  if (has_unk_6x()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->unk_6x(), output);
  }
  
  // optional bool unk_i_6 = 9;
  if (has_unk_i_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->unk_i_6(), output);
  }
  
  // required string item_type = 10;
  if (has_item_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->item_type().data(), this->item_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->item_type(), output);
  }
  
  // required bool unk_11 = 11;
  if (has_unk_11()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->unk_11(), output);
  }
  
  // required bool unk_12 = 12;
  if (has_unk_12()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->unk_12(), output);
  }
  
  // required bool unk_13 = 13;
  if (has_unk_13()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->unk_13(), output);
  }
  
  // required bool unk_14 = 14;
  if (has_unk_14()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->unk_14(), output);
  }
  
  // required bool unk_15 = 15;
  if (has_unk_15()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->unk_15(), output);
  }
  
  // required bool unk_16 = 16;
  if (has_unk_16()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->unk_16(), output);
  }
  
  // required bool unk_17 = 17;
  if (has_unk_17()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->unk_17(), output);
  }
  
  // required bool unk_18 = 18;
  if (has_unk_18()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->unk_18(), output);
  }
  
  // required bool unk_19 = 19;
  if (has_unk_19()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->unk_19(), output);
  }
  
  // required bool unk_20 = 20;
  if (has_unk_20()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->unk_20(), output);
  }
  
  // required bool unk_21 = 21;
  if (has_unk_21()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->unk_21(), output);
  }
  
  // required bool unk_22 = 22;
  if (has_unk_22()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->unk_22(), output);
  }
  
  // optional bytes name = 23;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      23, this->name(), output);
  }
  
  // optional bytes desc = 24;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      24, this->desc(), output);
  }
  
  // required bool unk_25 = 25;
  if (has_unk_25()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->unk_25(), output);
  }
  
  // required string ico = 26;
  if (has_ico()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ico().data(), this->ico().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->ico(), output);
  }
  
  // required int32 unk_id = 28;
  if (has_unk_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->unk_id(), output);
  }
  
  // optional bytes shop_type = 29;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      29, this->shop_type(), output);
  }
  
  // optional int32 unk_30 = 30;
  if (has_unk_30()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->unk_30(), output);
  }
  
  // optional int32 unk_31 = 31;
  if (has_unk_31()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->unk_31(), output);
  }
  
  // optional int32 unk_32 = 32;
  if (has_unk_32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->unk_32(), output);
  }
  
  // optional int32 unk_33 = 33;
  if (has_unk_33()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->unk_33(), output);
  }
  
  // optional int32 unk_34 = 34;
  if (has_unk_34()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->unk_34(), output);
  }
  
  // optional int32 unk_35 = 35;
  if (has_unk_35()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->unk_35(), output);
  }
  
  // optional int32 unk_36 = 36;
  if (has_unk_36()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->unk_36(), output);
  }
  
  // optional int32 unk_37 = 37;
  if (has_unk_37()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->unk_37(), output);
  }
  
  // optional string scene = 38;
  if (has_scene()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->scene().data(), this->scene().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      38, this->scene(), output);
  }
  
  // optional int32 unk_39 = 39;
  if (has_unk_39()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->unk_39(), output);
  }
  
  // optional string unk_40 = 40;
  if (has_unk_40()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unk_40().data(), this->unk_40().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      40, this->unk_40(), output);
  }
  
  // optional int32 unk_41 = 41;
  if (has_unk_41()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->unk_41(), output);
  }
  
  // optional string ff = 42;
  if (has_ff()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ff().data(), this->ff().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      42, this->ff(), output);
  }
  
  // optional int32 unk_43 = 43;
  if (has_unk_43()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->unk_43(), output);
  }
  
  // optional int32 unk_44 = 44;
  if (has_unk_44()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->unk_44(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* item_item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // required bool unk_1 = 2;
  if (has_unk_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->unk_1(), target);
  }
  
  // required bool unk_2 = 3;
  if (has_unk_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->unk_2(), target);
  }
  
  // required bool unk_3 = 4;
  if (has_unk_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->unk_3(), target);
  }
  
  // required bool unk_4 = 5;
  if (has_unk_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->unk_4(), target);
  }
  
  // required bool unk_5 = 6;
  if (has_unk_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->unk_5(), target);
  }
  
  // required bool unk_6 = 7;
  if (has_unk_6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->unk_6(), target);
  }
  
  // optional bool unk_6x = 8;
  if (has_unk_6x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->unk_6x(), target);
  }
  
  // optional bool unk_i_6 = 9;
  if (has_unk_i_6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->unk_i_6(), target);
  }
  
  // required string item_type = 10;
  if (has_item_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->item_type().data(), this->item_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->item_type(), target);
  }
  
  // required bool unk_11 = 11;
  if (has_unk_11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->unk_11(), target);
  }
  
  // required bool unk_12 = 12;
  if (has_unk_12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->unk_12(), target);
  }
  
  // required bool unk_13 = 13;
  if (has_unk_13()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->unk_13(), target);
  }
  
  // required bool unk_14 = 14;
  if (has_unk_14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->unk_14(), target);
  }
  
  // required bool unk_15 = 15;
  if (has_unk_15()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->unk_15(), target);
  }
  
  // required bool unk_16 = 16;
  if (has_unk_16()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->unk_16(), target);
  }
  
  // required bool unk_17 = 17;
  if (has_unk_17()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->unk_17(), target);
  }
  
  // required bool unk_18 = 18;
  if (has_unk_18()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->unk_18(), target);
  }
  
  // required bool unk_19 = 19;
  if (has_unk_19()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->unk_19(), target);
  }
  
  // required bool unk_20 = 20;
  if (has_unk_20()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->unk_20(), target);
  }
  
  // required bool unk_21 = 21;
  if (has_unk_21()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->unk_21(), target);
  }
  
  // required bool unk_22 = 22;
  if (has_unk_22()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->unk_22(), target);
  }
  
  // optional bytes name = 23;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->name(), target);
  }
  
  // optional bytes desc = 24;
  if (has_desc()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        24, this->desc(), target);
  }
  
  // required bool unk_25 = 25;
  if (has_unk_25()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->unk_25(), target);
  }
  
  // required string ico = 26;
  if (has_ico()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ico().data(), this->ico().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->ico(), target);
  }
  
  // required int32 unk_id = 28;
  if (has_unk_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->unk_id(), target);
  }
  
  // optional bytes shop_type = 29;
  if (has_shop_type()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        29, this->shop_type(), target);
  }
  
  // optional int32 unk_30 = 30;
  if (has_unk_30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->unk_30(), target);
  }
  
  // optional int32 unk_31 = 31;
  if (has_unk_31()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->unk_31(), target);
  }
  
  // optional int32 unk_32 = 32;
  if (has_unk_32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->unk_32(), target);
  }
  
  // optional int32 unk_33 = 33;
  if (has_unk_33()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->unk_33(), target);
  }
  
  // optional int32 unk_34 = 34;
  if (has_unk_34()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->unk_34(), target);
  }
  
  // optional int32 unk_35 = 35;
  if (has_unk_35()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->unk_35(), target);
  }
  
  // optional int32 unk_36 = 36;
  if (has_unk_36()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->unk_36(), target);
  }
  
  // optional int32 unk_37 = 37;
  if (has_unk_37()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(37, this->unk_37(), target);
  }
  
  // optional string scene = 38;
  if (has_scene()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->scene().data(), this->scene().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->scene(), target);
  }
  
  // optional int32 unk_39 = 39;
  if (has_unk_39()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->unk_39(), target);
  }
  
  // optional string unk_40 = 40;
  if (has_unk_40()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unk_40().data(), this->unk_40().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->unk_40(), target);
  }
  
  // optional int32 unk_41 = 41;
  if (has_unk_41()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->unk_41(), target);
  }
  
  // optional string ff = 42;
  if (has_ff()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ff().data(), this->ff().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->ff(), target);
  }
  
  // optional int32 unk_43 = 43;
  if (has_unk_43()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->unk_43(), target);
  }
  
  // optional int32 unk_44 = 44;
  if (has_unk_44()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->unk_44(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int item_item::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // required bool unk_1 = 2;
    if (has_unk_1()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_2 = 3;
    if (has_unk_2()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_3 = 4;
    if (has_unk_3()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_4 = 5;
    if (has_unk_4()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_5 = 6;
    if (has_unk_5()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_6 = 7;
    if (has_unk_6()) {
      total_size += 1 + 1;
    }
    
    // optional bool unk_6x = 8;
    if (has_unk_6x()) {
      total_size += 1 + 1;
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool unk_i_6 = 9;
    if (has_unk_i_6()) {
      total_size += 1 + 1;
    }
    
    // required string item_type = 10;
    if (has_item_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_type());
    }
    
    // required bool unk_11 = 11;
    if (has_unk_11()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_12 = 12;
    if (has_unk_12()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_13 = 13;
    if (has_unk_13()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_14 = 14;
    if (has_unk_14()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_15 = 15;
    if (has_unk_15()) {
      total_size += 1 + 1;
    }
    
    // required bool unk_16 = 16;
    if (has_unk_16()) {
      total_size += 2 + 1;
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required bool unk_17 = 17;
    if (has_unk_17()) {
      total_size += 2 + 1;
    }
    
    // required bool unk_18 = 18;
    if (has_unk_18()) {
      total_size += 2 + 1;
    }
    
    // required bool unk_19 = 19;
    if (has_unk_19()) {
      total_size += 2 + 1;
    }
    
    // required bool unk_20 = 20;
    if (has_unk_20()) {
      total_size += 2 + 1;
    }
    
    // required bool unk_21 = 21;
    if (has_unk_21()) {
      total_size += 2 + 1;
    }
    
    // required bool unk_22 = 22;
    if (has_unk_22()) {
      total_size += 2 + 1;
    }
    
    // optional bytes name = 23;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }
    
    // optional bytes desc = 24;
    if (has_desc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required bool unk_25 = 25;
    if (has_unk_25()) {
      total_size += 2 + 1;
    }
    
    // required string ico = 26;
    if (has_ico()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ico());
    }
    
    // required int32 unk_id = 28;
    if (has_unk_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_id());
    }
    
    // optional bytes shop_type = 29;
    if (has_shop_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->shop_type());
    }
    
    // optional int32 unk_30 = 30;
    if (has_unk_30()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_30());
    }
    
    // optional int32 unk_31 = 31;
    if (has_unk_31()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_31());
    }
    
    // optional int32 unk_32 = 32;
    if (has_unk_32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_32());
    }
    
    // optional int32 unk_33 = 33;
    if (has_unk_33()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_33());
    }
    
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional int32 unk_34 = 34;
    if (has_unk_34()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_34());
    }
    
    // optional int32 unk_35 = 35;
    if (has_unk_35()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_35());
    }
    
    // optional int32 unk_36 = 36;
    if (has_unk_36()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_36());
    }
    
    // optional int32 unk_37 = 37;
    if (has_unk_37()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_37());
    }
    
    // optional string scene = 38;
    if (has_scene()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scene());
    }
    
    // optional int32 unk_39 = 39;
    if (has_unk_39()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_39());
    }
    
    // optional string unk_40 = 40;
    if (has_unk_40()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unk_40());
    }
    
    // optional int32 unk_41 = 41;
    if (has_unk_41()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_41());
    }
    
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional string ff = 42;
    if (has_ff()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ff());
    }
    
    // optional int32 unk_43 = 43;
    if (has_unk_43()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_43());
    }
    
    // optional int32 unk_44 = 44;
    if (has_unk_44()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unk_44());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void item_item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const item_item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const item_item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void item_item::MergeFrom(const item_item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_unk_1()) {
      set_unk_1(from.unk_1());
    }
    if (from.has_unk_2()) {
      set_unk_2(from.unk_2());
    }
    if (from.has_unk_3()) {
      set_unk_3(from.unk_3());
    }
    if (from.has_unk_4()) {
      set_unk_4(from.unk_4());
    }
    if (from.has_unk_5()) {
      set_unk_5(from.unk_5());
    }
    if (from.has_unk_6()) {
      set_unk_6(from.unk_6());
    }
    if (from.has_unk_6x()) {
      set_unk_6x(from.unk_6x());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_unk_i_6()) {
      set_unk_i_6(from.unk_i_6());
    }
    if (from.has_item_type()) {
      set_item_type(from.item_type());
    }
    if (from.has_unk_11()) {
      set_unk_11(from.unk_11());
    }
    if (from.has_unk_12()) {
      set_unk_12(from.unk_12());
    }
    if (from.has_unk_13()) {
      set_unk_13(from.unk_13());
    }
    if (from.has_unk_14()) {
      set_unk_14(from.unk_14());
    }
    if (from.has_unk_15()) {
      set_unk_15(from.unk_15());
    }
    if (from.has_unk_16()) {
      set_unk_16(from.unk_16());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_unk_17()) {
      set_unk_17(from.unk_17());
    }
    if (from.has_unk_18()) {
      set_unk_18(from.unk_18());
    }
    if (from.has_unk_19()) {
      set_unk_19(from.unk_19());
    }
    if (from.has_unk_20()) {
      set_unk_20(from.unk_20());
    }
    if (from.has_unk_21()) {
      set_unk_21(from.unk_21());
    }
    if (from.has_unk_22()) {
      set_unk_22(from.unk_22());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_unk_25()) {
      set_unk_25(from.unk_25());
    }
    if (from.has_ico()) {
      set_ico(from.ico());
    }
    if (from.has_unk_id()) {
      set_unk_id(from.unk_id());
    }
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_unk_30()) {
      set_unk_30(from.unk_30());
    }
    if (from.has_unk_31()) {
      set_unk_31(from.unk_31());
    }
    if (from.has_unk_32()) {
      set_unk_32(from.unk_32());
    }
    if (from.has_unk_33()) {
      set_unk_33(from.unk_33());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_unk_34()) {
      set_unk_34(from.unk_34());
    }
    if (from.has_unk_35()) {
      set_unk_35(from.unk_35());
    }
    if (from.has_unk_36()) {
      set_unk_36(from.unk_36());
    }
    if (from.has_unk_37()) {
      set_unk_37(from.unk_37());
    }
    if (from.has_scene()) {
      set_scene(from.scene());
    }
    if (from.has_unk_39()) {
      set_unk_39(from.unk_39());
    }
    if (from.has_unk_40()) {
      set_unk_40(from.unk_40());
    }
    if (from.has_unk_41()) {
      set_unk_41(from.unk_41());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_ff()) {
      set_ff(from.ff());
    }
    if (from.has_unk_43()) {
      set_unk_43(from.unk_43());
    }
    if (from.has_unk_44()) {
      set_unk_44(from.unk_44());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void item_item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void item_item::CopyFrom(const item_item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool item_item::IsInitialized() const {
  if ((_has_bits_[0] & 0x073ffe7f) != 0x073ffe7f) return false;
  
  return true;
}

void item_item::Swap(item_item* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(unk_1_, other->unk_1_);
    std::swap(unk_2_, other->unk_2_);
    std::swap(unk_3_, other->unk_3_);
    std::swap(unk_4_, other->unk_4_);
    std::swap(unk_5_, other->unk_5_);
    std::swap(unk_6_, other->unk_6_);
    std::swap(unk_6x_, other->unk_6x_);
    std::swap(unk_i_6_, other->unk_i_6_);
    std::swap(item_type_, other->item_type_);
    std::swap(unk_11_, other->unk_11_);
    std::swap(unk_12_, other->unk_12_);
    std::swap(unk_13_, other->unk_13_);
    std::swap(unk_14_, other->unk_14_);
    std::swap(unk_15_, other->unk_15_);
    std::swap(unk_16_, other->unk_16_);
    std::swap(unk_17_, other->unk_17_);
    std::swap(unk_18_, other->unk_18_);
    std::swap(unk_19_, other->unk_19_);
    std::swap(unk_20_, other->unk_20_);
    std::swap(unk_21_, other->unk_21_);
    std::swap(unk_22_, other->unk_22_);
    std::swap(name_, other->name_);
    std::swap(desc_, other->desc_);
    std::swap(unk_25_, other->unk_25_);
    std::swap(ico_, other->ico_);
    std::swap(unk_id_, other->unk_id_);
    std::swap(shop_type_, other->shop_type_);
    std::swap(unk_30_, other->unk_30_);
    std::swap(unk_31_, other->unk_31_);
    std::swap(unk_32_, other->unk_32_);
    std::swap(unk_33_, other->unk_33_);
    std::swap(unk_34_, other->unk_34_);
    std::swap(unk_35_, other->unk_35_);
    std::swap(unk_36_, other->unk_36_);
    std::swap(unk_37_, other->unk_37_);
    std::swap(scene_, other->scene_);
    std::swap(unk_39_, other->unk_39_);
    std::swap(unk_40_, other->unk_40_);
    std::swap(unk_41_, other->unk_41_);
    std::swap(ff_, other->ff_);
    std::swap(unk_43_, other->unk_43_);
    std::swap(unk_44_, other->unk_44_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata item_item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = item_item_descriptor_;
  metadata.reflection = item_item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int item_item_c::kItemsFieldNumber;
#endif  // !_MSC_VER

item_item_c::item_item_c()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void item_item_c::InitAsDefaultInstance() {
}

item_item_c::item_item_c(const item_item_c& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void item_item_c::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

item_item_c::~item_item_c() {
  SharedDtor();
}

void item_item_c::SharedDtor() {
  if (this != default_instance_) {
  }
}

void item_item_c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* item_item_c::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return item_item_c_descriptor_;
}

const item_item_c& item_item_c::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fitem_5fc_2eproto();  return *default_instance_;
}

item_item_c* item_item_c::default_instance_ = NULL;

item_item_c* item_item_c::New() const {
  return new item_item_c;
}

void item_item_c::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool item_item_c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .item_item items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void item_item_c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .item_item items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* item_item_c::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .item_item items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int item_item_c::ByteSize() const {
  int total_size = 0;
  
  // repeated .item_item items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void item_item_c::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const item_item_c* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const item_item_c*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void item_item_c::MergeFrom(const item_item_c& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void item_item_c::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void item_item_c::CopyFrom(const item_item_c& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool item_item_c::IsInitialized() const {
  
  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void item_item_c::Swap(item_item_c* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata item_item_c::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = item_item_c_descriptor_;
  metadata.reflection = item_item_c_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
