// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Hero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SHeroSkin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SHeroSkin_reflection_ = NULL;
const ::google::protobuf::Descriptor* SHeroSkinDataPool_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SHeroSkinDataPool_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Hero_2eproto() {
  protobuf_AddDesc_Hero_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Hero.proto");
  GOOGLE_CHECK(file != NULL);
  SHeroSkin_descriptor_ = file->message_type(0);
  static const int SHeroSkin_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, nheroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, nskinid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, selectpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, scmapskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, ssmapskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, smapotherappearance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, ssmapother_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, sbeginxy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, sheadbeginxy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, sbischangevoice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, schagenskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, nskinlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, schangebulleteffectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, schangestatuseffectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, schangevoiceeffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, sskinwideandhight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, sheadwideandhight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, sbackgroundbeginwidehight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, sbackgroundendwidehight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, umodelscale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, uischangeicon_),
  };
  SHeroSkin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SHeroSkin_descriptor_,
      SHeroSkin::default_instance_,
      SHeroSkin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SHeroSkin));
  SHeroSkinDataPool_descriptor_ = file->message_type(1);
  static const int SHeroSkinDataPool_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkinDataPool, data_),
  };
  SHeroSkinDataPool_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SHeroSkinDataPool_descriptor_,
      SHeroSkinDataPool::default_instance_,
      SHeroSkinDataPool_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkinDataPool, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SHeroSkinDataPool, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SHeroSkinDataPool));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Hero_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SHeroSkin_descriptor_, &SHeroSkin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SHeroSkinDataPool_descriptor_, &SHeroSkinDataPool::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Hero_2eproto() {
  delete SHeroSkin::default_instance_;
  delete SHeroSkin_reflection_;
  delete SHeroSkinDataPool::default_instance_;
  delete SHeroSkinDataPool_reflection_;
}

void protobuf_AddDesc_Hero_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nHero.proto\"\206\004\n\tSHeroSkin\022\017\n\007nHeroID\030\001 "
    "\001(\r\022\017\n\007nSkinID\030\002 \001(\r\022\021\n\tSelectPic\030\003 \001(\014\022"
    "\022\n\nsCMapSkill\030\004 \001(\t\022\022\n\nsSmapSkill\030\005 \001(\t\022"
    "\033\n\023sMapOtherAppearance\030\006 \001(\t\022\022\n\nsSmapOth"
    "er\030\007 \001(\t\022\020\n\010sBeginXY\030\010 \001(\t\022\024\n\014sHeadBegin"
    "XY\030\t \001(\t\022\027\n\017sbIsChangeVoice\030\n \001(\t\022\026\n\016sCh"
    "agenSkillId\030\013 \001(\t\022\022\n\nnSkinLevel\030\014 \001(\r\022\035\n"
    "\025sChangebulletEffectId\030\r \001(\t\022\035\n\025sChangeS"
    "tatusEffectId\030\016 \001(\t\022\032\n\022sChangeVoiceEffec"
    "t\030\017 \001(\t\022\031\n\021sSkinwideAndHight\030\020 \001(\t\022\031\n\021sH"
    "eadwideAndHight\030\021 \001(\t\022!\n\031sbackgroundBegi"
    "nWideHight\030\022 \001(\t\022\037\n\027sbackgroundendWideHi"
    "ght\030\023 \001(\t\022\023\n\013uModelScale\030\024 \001(\r\022\025\n\ruIsCha"
    "ngeIcon\030\025 \001(\r\"-\n\021SHeroSkinDataPool\022\030\n\004da"
    "ta\030\001 \003(\0132\n.SHeroSkin", 580);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Hero.proto", &protobuf_RegisterTypes);
  SHeroSkin::default_instance_ = new SHeroSkin();
  SHeroSkinDataPool::default_instance_ = new SHeroSkinDataPool();
  SHeroSkin::default_instance_->InitAsDefaultInstance();
  SHeroSkinDataPool::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Hero_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Hero_2eproto {
  StaticDescriptorInitializer_Hero_2eproto() {
    protobuf_AddDesc_Hero_2eproto();
  }
} static_descriptor_initializer_Hero_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int SHeroSkin::kNHeroIDFieldNumber;
const int SHeroSkin::kNSkinIDFieldNumber;
const int SHeroSkin::kSelectPicFieldNumber;
const int SHeroSkin::kSCMapSkillFieldNumber;
const int SHeroSkin::kSSmapSkillFieldNumber;
const int SHeroSkin::kSMapOtherAppearanceFieldNumber;
const int SHeroSkin::kSSmapOtherFieldNumber;
const int SHeroSkin::kSBeginXYFieldNumber;
const int SHeroSkin::kSHeadBeginXYFieldNumber;
const int SHeroSkin::kSbIsChangeVoiceFieldNumber;
const int SHeroSkin::kSChagenSkillIdFieldNumber;
const int SHeroSkin::kNSkinLevelFieldNumber;
const int SHeroSkin::kSChangebulletEffectIdFieldNumber;
const int SHeroSkin::kSChangeStatusEffectIdFieldNumber;
const int SHeroSkin::kSChangeVoiceEffectFieldNumber;
const int SHeroSkin::kSSkinwideAndHightFieldNumber;
const int SHeroSkin::kSHeadwideAndHightFieldNumber;
const int SHeroSkin::kSbackgroundBeginWideHightFieldNumber;
const int SHeroSkin::kSbackgroundendWideHightFieldNumber;
const int SHeroSkin::kUModelScaleFieldNumber;
const int SHeroSkin::kUIsChangeIconFieldNumber;
#endif  // !_MSC_VER

SHeroSkin::SHeroSkin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SHeroSkin::InitAsDefaultInstance() {
}

SHeroSkin::SHeroSkin(const SHeroSkin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SHeroSkin::SharedCtor() {
  _cached_size_ = 0;
  nheroid_ = 0u;
  nskinid_ = 0u;
  selectpic_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  scmapskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ssmapskill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  smapotherappearance_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ssmapother_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sbeginxy_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sheadbeginxy_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sbischangevoice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  schagenskillid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nskinlevel_ = 0u;
  schangebulleteffectid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  schangestatuseffectid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  schangevoiceeffect_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sskinwideandhight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sheadwideandhight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sbackgroundbeginwidehight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sbackgroundendwidehight_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  umodelscale_ = 0u;
  uischangeicon_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SHeroSkin::~SHeroSkin() {
  SharedDtor();
}

void SHeroSkin::SharedDtor() {
  if (selectpic_ != &::google::protobuf::internal::kEmptyString) {
    delete selectpic_;
  }
  if (scmapskill_ != &::google::protobuf::internal::kEmptyString) {
    delete scmapskill_;
  }
  if (ssmapskill_ != &::google::protobuf::internal::kEmptyString) {
    delete ssmapskill_;
  }
  if (smapotherappearance_ != &::google::protobuf::internal::kEmptyString) {
    delete smapotherappearance_;
  }
  if (ssmapother_ != &::google::protobuf::internal::kEmptyString) {
    delete ssmapother_;
  }
  if (sbeginxy_ != &::google::protobuf::internal::kEmptyString) {
    delete sbeginxy_;
  }
  if (sheadbeginxy_ != &::google::protobuf::internal::kEmptyString) {
    delete sheadbeginxy_;
  }
  if (sbischangevoice_ != &::google::protobuf::internal::kEmptyString) {
    delete sbischangevoice_;
  }
  if (schagenskillid_ != &::google::protobuf::internal::kEmptyString) {
    delete schagenskillid_;
  }
  if (schangebulleteffectid_ != &::google::protobuf::internal::kEmptyString) {
    delete schangebulleteffectid_;
  }
  if (schangestatuseffectid_ != &::google::protobuf::internal::kEmptyString) {
    delete schangestatuseffectid_;
  }
  if (schangevoiceeffect_ != &::google::protobuf::internal::kEmptyString) {
    delete schangevoiceeffect_;
  }
  if (sskinwideandhight_ != &::google::protobuf::internal::kEmptyString) {
    delete sskinwideandhight_;
  }
  if (sheadwideandhight_ != &::google::protobuf::internal::kEmptyString) {
    delete sheadwideandhight_;
  }
  if (sbackgroundbeginwidehight_ != &::google::protobuf::internal::kEmptyString) {
    delete sbackgroundbeginwidehight_;
  }
  if (sbackgroundendwidehight_ != &::google::protobuf::internal::kEmptyString) {
    delete sbackgroundendwidehight_;
  }
  if (this != default_instance_) {
  }
}

void SHeroSkin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SHeroSkin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SHeroSkin_descriptor_;
}

const SHeroSkin& SHeroSkin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

SHeroSkin* SHeroSkin::default_instance_ = NULL;

SHeroSkin* SHeroSkin::New() const {
  return new SHeroSkin;
}

void SHeroSkin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nheroid_ = 0u;
    nskinid_ = 0u;
    if (has_selectpic()) {
      if (selectpic_ != &::google::protobuf::internal::kEmptyString) {
        selectpic_->clear();
      }
    }
    if (has_scmapskill()) {
      if (scmapskill_ != &::google::protobuf::internal::kEmptyString) {
        scmapskill_->clear();
      }
    }
    if (has_ssmapskill()) {
      if (ssmapskill_ != &::google::protobuf::internal::kEmptyString) {
        ssmapskill_->clear();
      }
    }
    if (has_smapotherappearance()) {
      if (smapotherappearance_ != &::google::protobuf::internal::kEmptyString) {
        smapotherappearance_->clear();
      }
    }
    if (has_ssmapother()) {
      if (ssmapother_ != &::google::protobuf::internal::kEmptyString) {
        ssmapother_->clear();
      }
    }
    if (has_sbeginxy()) {
      if (sbeginxy_ != &::google::protobuf::internal::kEmptyString) {
        sbeginxy_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_sheadbeginxy()) {
      if (sheadbeginxy_ != &::google::protobuf::internal::kEmptyString) {
        sheadbeginxy_->clear();
      }
    }
    if (has_sbischangevoice()) {
      if (sbischangevoice_ != &::google::protobuf::internal::kEmptyString) {
        sbischangevoice_->clear();
      }
    }
    if (has_schagenskillid()) {
      if (schagenskillid_ != &::google::protobuf::internal::kEmptyString) {
        schagenskillid_->clear();
      }
    }
    nskinlevel_ = 0u;
    if (has_schangebulleteffectid()) {
      if (schangebulleteffectid_ != &::google::protobuf::internal::kEmptyString) {
        schangebulleteffectid_->clear();
      }
    }
    if (has_schangestatuseffectid()) {
      if (schangestatuseffectid_ != &::google::protobuf::internal::kEmptyString) {
        schangestatuseffectid_->clear();
      }
    }
    if (has_schangevoiceeffect()) {
      if (schangevoiceeffect_ != &::google::protobuf::internal::kEmptyString) {
        schangevoiceeffect_->clear();
      }
    }
    if (has_sskinwideandhight()) {
      if (sskinwideandhight_ != &::google::protobuf::internal::kEmptyString) {
        sskinwideandhight_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_sheadwideandhight()) {
      if (sheadwideandhight_ != &::google::protobuf::internal::kEmptyString) {
        sheadwideandhight_->clear();
      }
    }
    if (has_sbackgroundbeginwidehight()) {
      if (sbackgroundbeginwidehight_ != &::google::protobuf::internal::kEmptyString) {
        sbackgroundbeginwidehight_->clear();
      }
    }
    if (has_sbackgroundendwidehight()) {
      if (sbackgroundendwidehight_ != &::google::protobuf::internal::kEmptyString) {
        sbackgroundendwidehight_->clear();
      }
    }
    umodelscale_ = 0u;
    uischangeicon_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SHeroSkin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 nHeroID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nheroid_)));
          set_has_nheroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nSkinID;
        break;
      }
      
      // optional uint32 nSkinID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nSkinID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nskinid_)));
          set_has_nskinid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_SelectPic;
        break;
      }
      
      // optional bytes SelectPic = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SelectPic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_selectpic()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_sCMapSkill;
        break;
      }
      
      // optional string sCMapSkill = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sCMapSkill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scmapskill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->scmapskill().data(), this->scmapskill().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_sSmapSkill;
        break;
      }
      
      // optional string sSmapSkill = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sSmapSkill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssmapskill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ssmapskill().data(), this->ssmapskill().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_sMapOtherAppearance;
        break;
      }
      
      // optional string sMapOtherAppearance = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sMapOtherAppearance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smapotherappearance()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->smapotherappearance().data(), this->smapotherappearance().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_sSmapOther;
        break;
      }
      
      // optional string sSmapOther = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sSmapOther:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssmapother()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ssmapother().data(), this->ssmapother().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_sBeginXY;
        break;
      }
      
      // optional string sBeginXY = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sBeginXY:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbeginxy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sbeginxy().data(), this->sbeginxy().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_sHeadBeginXY;
        break;
      }
      
      // optional string sHeadBeginXY = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sHeadBeginXY:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sheadbeginxy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sheadbeginxy().data(), this->sheadbeginxy().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_sbIsChangeVoice;
        break;
      }
      
      // optional string sbIsChangeVoice = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sbIsChangeVoice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbischangevoice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sbischangevoice().data(), this->sbischangevoice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_sChagenSkillId;
        break;
      }
      
      // optional string sChagenSkillId = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sChagenSkillId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schagenskillid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->schagenskillid().data(), this->schagenskillid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_nSkinLevel;
        break;
      }
      
      // optional uint32 nSkinLevel = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nSkinLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nskinlevel_)));
          set_has_nskinlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_sChangebulletEffectId;
        break;
      }
      
      // optional string sChangebulletEffectId = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sChangebulletEffectId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schangebulleteffectid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->schangebulleteffectid().data(), this->schangebulleteffectid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_sChangeStatusEffectId;
        break;
      }
      
      // optional string sChangeStatusEffectId = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sChangeStatusEffectId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schangestatuseffectid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->schangestatuseffectid().data(), this->schangestatuseffectid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_sChangeVoiceEffect;
        break;
      }
      
      // optional string sChangeVoiceEffect = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sChangeVoiceEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_schangevoiceeffect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->schangevoiceeffect().data(), this->schangevoiceeffect().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_sSkinwideAndHight;
        break;
      }
      
      // optional string sSkinwideAndHight = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sSkinwideAndHight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sskinwideandhight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sskinwideandhight().data(), this->sskinwideandhight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_sHeadwideAndHight;
        break;
      }
      
      // optional string sHeadwideAndHight = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sHeadwideAndHight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sheadwideandhight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sheadwideandhight().data(), this->sheadwideandhight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_sbackgroundBeginWideHight;
        break;
      }
      
      // optional string sbackgroundBeginWideHight = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sbackgroundBeginWideHight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbackgroundbeginwidehight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sbackgroundbeginwidehight().data(), this->sbackgroundbeginwidehight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_sbackgroundendWideHight;
        break;
      }
      
      // optional string sbackgroundendWideHight = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sbackgroundendWideHight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbackgroundendwidehight()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sbackgroundendwidehight().data(), this->sbackgroundendwidehight().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_uModelScale;
        break;
      }
      
      // optional uint32 uModelScale = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uModelScale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &umodelscale_)));
          set_has_umodelscale();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_uIsChangeIcon;
        break;
      }
      
      // optional uint32 uIsChangeIcon = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uIsChangeIcon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uischangeicon_)));
          set_has_uischangeicon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SHeroSkin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 nHeroID = 1;
  if (has_nheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nheroid(), output);
  }
  
  // optional uint32 nSkinID = 2;
  if (has_nskinid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nskinid(), output);
  }
  
  // optional bytes SelectPic = 3;
  if (has_selectpic()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->selectpic(), output);
  }
  
  // optional string sCMapSkill = 4;
  if (has_scmapskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->scmapskill().data(), this->scmapskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->scmapskill(), output);
  }
  
  // optional string sSmapSkill = 5;
  if (has_ssmapskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ssmapskill().data(), this->ssmapskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->ssmapskill(), output);
  }
  
  // optional string sMapOtherAppearance = 6;
  if (has_smapotherappearance()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->smapotherappearance().data(), this->smapotherappearance().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->smapotherappearance(), output);
  }
  
  // optional string sSmapOther = 7;
  if (has_ssmapother()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ssmapother().data(), this->ssmapother().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->ssmapother(), output);
  }
  
  // optional string sBeginXY = 8;
  if (has_sbeginxy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sbeginxy().data(), this->sbeginxy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->sbeginxy(), output);
  }
  
  // optional string sHeadBeginXY = 9;
  if (has_sheadbeginxy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sheadbeginxy().data(), this->sheadbeginxy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->sheadbeginxy(), output);
  }
  
  // optional string sbIsChangeVoice = 10;
  if (has_sbischangevoice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sbischangevoice().data(), this->sbischangevoice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->sbischangevoice(), output);
  }
  
  // optional string sChagenSkillId = 11;
  if (has_schagenskillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schagenskillid().data(), this->schagenskillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->schagenskillid(), output);
  }
  
  // optional uint32 nSkinLevel = 12;
  if (has_nskinlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->nskinlevel(), output);
  }
  
  // optional string sChangebulletEffectId = 13;
  if (has_schangebulleteffectid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schangebulleteffectid().data(), this->schangebulleteffectid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->schangebulleteffectid(), output);
  }
  
  // optional string sChangeStatusEffectId = 14;
  if (has_schangestatuseffectid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schangestatuseffectid().data(), this->schangestatuseffectid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->schangestatuseffectid(), output);
  }
  
  // optional string sChangeVoiceEffect = 15;
  if (has_schangevoiceeffect()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schangevoiceeffect().data(), this->schangevoiceeffect().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->schangevoiceeffect(), output);
  }
  
  // optional string sSkinwideAndHight = 16;
  if (has_sskinwideandhight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sskinwideandhight().data(), this->sskinwideandhight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->sskinwideandhight(), output);
  }
  
  // optional string sHeadwideAndHight = 17;
  if (has_sheadwideandhight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sheadwideandhight().data(), this->sheadwideandhight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->sheadwideandhight(), output);
  }
  
  // optional string sbackgroundBeginWideHight = 18;
  if (has_sbackgroundbeginwidehight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sbackgroundbeginwidehight().data(), this->sbackgroundbeginwidehight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->sbackgroundbeginwidehight(), output);
  }
  
  // optional string sbackgroundendWideHight = 19;
  if (has_sbackgroundendwidehight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sbackgroundendwidehight().data(), this->sbackgroundendwidehight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->sbackgroundendwidehight(), output);
  }
  
  // optional uint32 uModelScale = 20;
  if (has_umodelscale()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->umodelscale(), output);
  }
  
  // optional uint32 uIsChangeIcon = 21;
  if (has_uischangeicon()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->uischangeicon(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SHeroSkin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 nHeroID = 1;
  if (has_nheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nheroid(), target);
  }
  
  // optional uint32 nSkinID = 2;
  if (has_nskinid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nskinid(), target);
  }
  
  // optional bytes SelectPic = 3;
  if (has_selectpic()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->selectpic(), target);
  }
  
  // optional string sCMapSkill = 4;
  if (has_scmapskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->scmapskill().data(), this->scmapskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->scmapskill(), target);
  }
  
  // optional string sSmapSkill = 5;
  if (has_ssmapskill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ssmapskill().data(), this->ssmapskill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ssmapskill(), target);
  }
  
  // optional string sMapOtherAppearance = 6;
  if (has_smapotherappearance()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->smapotherappearance().data(), this->smapotherappearance().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->smapotherappearance(), target);
  }
  
  // optional string sSmapOther = 7;
  if (has_ssmapother()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ssmapother().data(), this->ssmapother().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ssmapother(), target);
  }
  
  // optional string sBeginXY = 8;
  if (has_sbeginxy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sbeginxy().data(), this->sbeginxy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->sbeginxy(), target);
  }
  
  // optional string sHeadBeginXY = 9;
  if (has_sheadbeginxy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sheadbeginxy().data(), this->sheadbeginxy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sheadbeginxy(), target);
  }
  
  // optional string sbIsChangeVoice = 10;
  if (has_sbischangevoice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sbischangevoice().data(), this->sbischangevoice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sbischangevoice(), target);
  }
  
  // optional string sChagenSkillId = 11;
  if (has_schagenskillid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schagenskillid().data(), this->schagenskillid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->schagenskillid(), target);
  }
  
  // optional uint32 nSkinLevel = 12;
  if (has_nskinlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->nskinlevel(), target);
  }
  
  // optional string sChangebulletEffectId = 13;
  if (has_schangebulleteffectid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schangebulleteffectid().data(), this->schangebulleteffectid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->schangebulleteffectid(), target);
  }
  
  // optional string sChangeStatusEffectId = 14;
  if (has_schangestatuseffectid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schangestatuseffectid().data(), this->schangestatuseffectid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->schangestatuseffectid(), target);
  }
  
  // optional string sChangeVoiceEffect = 15;
  if (has_schangevoiceeffect()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->schangevoiceeffect().data(), this->schangevoiceeffect().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->schangevoiceeffect(), target);
  }
  
  // optional string sSkinwideAndHight = 16;
  if (has_sskinwideandhight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sskinwideandhight().data(), this->sskinwideandhight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->sskinwideandhight(), target);
  }
  
  // optional string sHeadwideAndHight = 17;
  if (has_sheadwideandhight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sheadwideandhight().data(), this->sheadwideandhight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->sheadwideandhight(), target);
  }
  
  // optional string sbackgroundBeginWideHight = 18;
  if (has_sbackgroundbeginwidehight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sbackgroundbeginwidehight().data(), this->sbackgroundbeginwidehight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->sbackgroundbeginwidehight(), target);
  }
  
  // optional string sbackgroundendWideHight = 19;
  if (has_sbackgroundendwidehight()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sbackgroundendwidehight().data(), this->sbackgroundendwidehight().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->sbackgroundendwidehight(), target);
  }
  
  // optional uint32 uModelScale = 20;
  if (has_umodelscale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->umodelscale(), target);
  }
  
  // optional uint32 uIsChangeIcon = 21;
  if (has_uischangeicon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->uischangeicon(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SHeroSkin::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 nHeroID = 1;
    if (has_nheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nheroid());
    }
    
    // optional uint32 nSkinID = 2;
    if (has_nskinid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nskinid());
    }
    
    // optional bytes SelectPic = 3;
    if (has_selectpic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->selectpic());
    }
    
    // optional string sCMapSkill = 4;
    if (has_scmapskill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scmapskill());
    }
    
    // optional string sSmapSkill = 5;
    if (has_ssmapskill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssmapskill());
    }
    
    // optional string sMapOtherAppearance = 6;
    if (has_smapotherappearance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smapotherappearance());
    }
    
    // optional string sSmapOther = 7;
    if (has_ssmapother()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssmapother());
    }
    
    // optional string sBeginXY = 8;
    if (has_sbeginxy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbeginxy());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string sHeadBeginXY = 9;
    if (has_sheadbeginxy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sheadbeginxy());
    }
    
    // optional string sbIsChangeVoice = 10;
    if (has_sbischangevoice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbischangevoice());
    }
    
    // optional string sChagenSkillId = 11;
    if (has_schagenskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->schagenskillid());
    }
    
    // optional uint32 nSkinLevel = 12;
    if (has_nskinlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nskinlevel());
    }
    
    // optional string sChangebulletEffectId = 13;
    if (has_schangebulleteffectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->schangebulleteffectid());
    }
    
    // optional string sChangeStatusEffectId = 14;
    if (has_schangestatuseffectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->schangestatuseffectid());
    }
    
    // optional string sChangeVoiceEffect = 15;
    if (has_schangevoiceeffect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->schangevoiceeffect());
    }
    
    // optional string sSkinwideAndHight = 16;
    if (has_sskinwideandhight()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sskinwideandhight());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string sHeadwideAndHight = 17;
    if (has_sheadwideandhight()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sheadwideandhight());
    }
    
    // optional string sbackgroundBeginWideHight = 18;
    if (has_sbackgroundbeginwidehight()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbackgroundbeginwidehight());
    }
    
    // optional string sbackgroundendWideHight = 19;
    if (has_sbackgroundendwidehight()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbackgroundendwidehight());
    }
    
    // optional uint32 uModelScale = 20;
    if (has_umodelscale()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->umodelscale());
    }
    
    // optional uint32 uIsChangeIcon = 21;
    if (has_uischangeicon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uischangeicon());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SHeroSkin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SHeroSkin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SHeroSkin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SHeroSkin::MergeFrom(const SHeroSkin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nheroid()) {
      set_nheroid(from.nheroid());
    }
    if (from.has_nskinid()) {
      set_nskinid(from.nskinid());
    }
    if (from.has_selectpic()) {
      set_selectpic(from.selectpic());
    }
    if (from.has_scmapskill()) {
      set_scmapskill(from.scmapskill());
    }
    if (from.has_ssmapskill()) {
      set_ssmapskill(from.ssmapskill());
    }
    if (from.has_smapotherappearance()) {
      set_smapotherappearance(from.smapotherappearance());
    }
    if (from.has_ssmapother()) {
      set_ssmapother(from.ssmapother());
    }
    if (from.has_sbeginxy()) {
      set_sbeginxy(from.sbeginxy());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sheadbeginxy()) {
      set_sheadbeginxy(from.sheadbeginxy());
    }
    if (from.has_sbischangevoice()) {
      set_sbischangevoice(from.sbischangevoice());
    }
    if (from.has_schagenskillid()) {
      set_schagenskillid(from.schagenskillid());
    }
    if (from.has_nskinlevel()) {
      set_nskinlevel(from.nskinlevel());
    }
    if (from.has_schangebulleteffectid()) {
      set_schangebulleteffectid(from.schangebulleteffectid());
    }
    if (from.has_schangestatuseffectid()) {
      set_schangestatuseffectid(from.schangestatuseffectid());
    }
    if (from.has_schangevoiceeffect()) {
      set_schangevoiceeffect(from.schangevoiceeffect());
    }
    if (from.has_sskinwideandhight()) {
      set_sskinwideandhight(from.sskinwideandhight());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_sheadwideandhight()) {
      set_sheadwideandhight(from.sheadwideandhight());
    }
    if (from.has_sbackgroundbeginwidehight()) {
      set_sbackgroundbeginwidehight(from.sbackgroundbeginwidehight());
    }
    if (from.has_sbackgroundendwidehight()) {
      set_sbackgroundendwidehight(from.sbackgroundendwidehight());
    }
    if (from.has_umodelscale()) {
      set_umodelscale(from.umodelscale());
    }
    if (from.has_uischangeicon()) {
      set_uischangeicon(from.uischangeicon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SHeroSkin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SHeroSkin::CopyFrom(const SHeroSkin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SHeroSkin::IsInitialized() const {
  
  return true;
}

void SHeroSkin::Swap(SHeroSkin* other) {
  if (other != this) {
    std::swap(nheroid_, other->nheroid_);
    std::swap(nskinid_, other->nskinid_);
    std::swap(selectpic_, other->selectpic_);
    std::swap(scmapskill_, other->scmapskill_);
    std::swap(ssmapskill_, other->ssmapskill_);
    std::swap(smapotherappearance_, other->smapotherappearance_);
    std::swap(ssmapother_, other->ssmapother_);
    std::swap(sbeginxy_, other->sbeginxy_);
    std::swap(sheadbeginxy_, other->sheadbeginxy_);
    std::swap(sbischangevoice_, other->sbischangevoice_);
    std::swap(schagenskillid_, other->schagenskillid_);
    std::swap(nskinlevel_, other->nskinlevel_);
    std::swap(schangebulleteffectid_, other->schangebulleteffectid_);
    std::swap(schangestatuseffectid_, other->schangestatuseffectid_);
    std::swap(schangevoiceeffect_, other->schangevoiceeffect_);
    std::swap(sskinwideandhight_, other->sskinwideandhight_);
    std::swap(sheadwideandhight_, other->sheadwideandhight_);
    std::swap(sbackgroundbeginwidehight_, other->sbackgroundbeginwidehight_);
    std::swap(sbackgroundendwidehight_, other->sbackgroundendwidehight_);
    std::swap(umodelscale_, other->umodelscale_);
    std::swap(uischangeicon_, other->uischangeicon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SHeroSkin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SHeroSkin_descriptor_;
  metadata.reflection = SHeroSkin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SHeroSkinDataPool::kDataFieldNumber;
#endif  // !_MSC_VER

SHeroSkinDataPool::SHeroSkinDataPool()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SHeroSkinDataPool::InitAsDefaultInstance() {
}

SHeroSkinDataPool::SHeroSkinDataPool(const SHeroSkinDataPool& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SHeroSkinDataPool::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SHeroSkinDataPool::~SHeroSkinDataPool() {
  SharedDtor();
}

void SHeroSkinDataPool::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SHeroSkinDataPool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SHeroSkinDataPool::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SHeroSkinDataPool_descriptor_;
}

const SHeroSkinDataPool& SHeroSkinDataPool::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Hero_2eproto();  return *default_instance_;
}

SHeroSkinDataPool* SHeroSkinDataPool::default_instance_ = NULL;

SHeroSkinDataPool* SHeroSkinDataPool::New() const {
  return new SHeroSkinDataPool;
}

void SHeroSkinDataPool::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SHeroSkinDataPool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SHeroSkin data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SHeroSkinDataPool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .SHeroSkin data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SHeroSkinDataPool::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .SHeroSkin data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SHeroSkinDataPool::ByteSize() const {
  int total_size = 0;
  
  // repeated .SHeroSkin data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SHeroSkinDataPool::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SHeroSkinDataPool* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SHeroSkinDataPool*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SHeroSkinDataPool::MergeFrom(const SHeroSkinDataPool& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SHeroSkinDataPool::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SHeroSkinDataPool::CopyFrom(const SHeroSkinDataPool& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SHeroSkinDataPool::IsInitialized() const {
  
  return true;
}

void SHeroSkinDataPool::Swap(SHeroSkinDataPool* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SHeroSkinDataPool::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SHeroSkinDataPool_descriptor_;
  metadata.reflection = SHeroSkinDataPool_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
