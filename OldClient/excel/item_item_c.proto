message item_item
{
	required int32 item_id = 1;	//8
	optional int32 unk_1 = 2;	//10
	optional int32 unk_2 = 3;	//18
	optional int32 unk_3 = 4;	//20
	optional int32 unk_4 = 5;	//28
	optional int32 unk_5 = 6;	//30
	optional int32 unk_6 = 7;	//38
	optional int32 unk_6x = 8;	//40
	optional int32 unk_i_6 = 9;	//48
	required string item_type = 10;	//52
	optional int32 unk_11 = 11;	//48
	optional int32 unk_12 = 12;	//48
	optional int32 unk_13 = 13;	//48
	optional int32 unk_14 = 14;	//48
	optional int32 unk_15 = 15;	//48
	optional int32 unk_16 = 16;	//48
	optional int32 unk_17 = 17;	//48
	optional int32 unk_18 = 18;	//48
	optional int32 unk_19 = 19;	//48
	optional int32 unk_20 = 20;	//48
	optional int32 unk_21 = 21;	//48
	optional int32 unk_22 = 22;	//48
	optional bytes name = 23;	//48
	optional bytes desc = 24;	//48
	optional int32 unk_25 = 25;
	optional string ico = 26;
	optional int32 unk_id = 28;
	optional bytes shop_type = 29;	//48
	optional int32 unk_30 = 30;
	optional int32 unk_31 = 31;
	optional int32 unk_32 = 32;
	optional int32 unk_33 = 33;
	optional int32 unk_34 = 34;
	optional int32 unk_35 = 35;
	optional int32 unk_36 = 36;
	optional int32 unk_37 = 37;
	optional string scene = 38;
	optional int32 unk_39 = 39;
	optional string unk_40 = 40;
	optional int32 unk_41 = 41;
	optional string ff = 42;
	optional int32 unk_43 = 43;
	optional int32 unk_44 = 44;
}

message item_item_c
{
	repeated item_item items = 1;
}